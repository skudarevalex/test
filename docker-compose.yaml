version: '3'

services:

  app:
    build: ./app/
    image: test_1:latest
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    environment:
      - PYTHONPATH=/app
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    depends_on:
      - database
      - rabbitmq
    ports:
      - "8080:8080"

  web-proxy:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
      - database
      - webui

  rabbitmq:
    image: rabbitmq:3.13.1-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      #- 15672:15672
      - 5673:5672
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 10s
      timeout: 5s
      retries: 5

  database:
    image: postgres:16-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  worker:
    build: ./app/workers/
    command: python worker.py
    depends_on:
      - rabbitmq
      - database
    volumes:
      - ./app:/app
    environment:
      - PYTHONPATH=/app
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
    scale: 3

  webui:
    build: ./app/webui/
    image: ui_1:latest
    volumes:
      - ./app:/app
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
    depends_on:
      - app
